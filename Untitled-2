
170115  0:20:34	   22 Connect	root@localhost on
		   22 Query	CREATE DATABASE IF NOT EXISTS login54321
		   22 Quit
		   23 Connect	root@localhost on login54321
		   23 Query	SET FOREIGN_KEY_CHECKS= 0;
		   23 Query	CREATE TABLE IF NOT EXISTS members (`id` char(23) NOT NULL, `username` varchar(65) NOT NULL DEFAULT '', `password` varchar(255) NOT NULL DEFAULT '', `email` varchar(65) NOT NULL, `verified` tinyint(1) NOT NULL DEFAULT '0', `admin` tinyint(1) NOT NULL DEFAULT '0', `mod_timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`id`), UNIQUE KEY `username_UNIQUE` (`username`), UNIQUE KEY `id_UNIQUE` (`id`), UNIQUE KEY `email_UNIQUE` (`email`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		   23 Query	SET FOREIGN_KEY_CHECKS = 1
		   23 Quit
		   24 Connect	root@localhost on login54321
		   24 Query	SET FOREIGN_KEY_CHECKS = 0;
		   24 Query	CREATE TABLE IF NOT EXISTS admins ( `adminid` char(23) NOT NULL DEFAULT 'uuid_short();', `userid` char(23) NOT NULL, `active` bit(1) NOT NULL DEFAULT b'0', `superadmin` bit(1) NOT NULL DEFAULT b'0', PRIMARY KEY (`adminid`,`userid`), UNIQUE KEY `adminid_UNIQUE` (`adminid`), UNIQUE KEY `userid_UNIQUE` (`userid`), CONSTRAINT `fk_userid_admins` FOREIGN KEY (`userid`) REFERENCES `members` (`id`) ON UPDATE CASCADE ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		   24 Query	SET FOREIGN_KEY_CHECKS = 1
		   24 Quit
		   25 Connect	root@localhost on login54321
		   25 Query	SET FOREIGN_KEY_CHECKS = 0;
		   25 Query	CREATE TABLE IF NOT EXISTS deletedMembers ( `id` char(23) NOT NULL, `username` varchar(65) NOT NULL DEFAULT '', `password` varchar(65) NOT NULL DEFAULT '', `email` varchar(65) NOT NULL, `verified` tinyint(1) NOT NULL DEFAULT '0', `admin` tinyint(1) NOT NULL DEFAULT '0', `mod_timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`id`), UNIQUE KEY `id_UNIQUE` (`id`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		   25 Query	SET FOREIGN_KEY_CHECKS = 1
		   25 Quit
170115  0:20:35	   26 Connect	root@localhost on login54321
		   26 Query	SET FOREIGN_KEY_CHECKS = 0;
		   26 Query	CREATE TABLE IF NOT EXISTS loginAttempts ( `ID` int(11) NOT NULL AUTO_INCREMENT, `Username` varchar(65) DEFAULT NULL, `IP` varchar(20) NOT NULL, `Attempts` int(11) NOT NULL, `LastLogin` datetime NOT NULL, PRIMARY KEY (`ID`) ) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8;
		   26 Query	SET FOREIGN_KEY_CHECKS = 1
		   26 Quit
		   27 Connect	root@localhost on login54321
		   27 Query	SET FOREIGN_KEY_CHECKS = 0;
		   27 Query	CREATE TABLE IF NOT EXISTS memberInfo ( `userid` char(23) NOT NULL, `firstname` varchar(45) NOT NULL, `lastname` varchar(55) DEFAULT NULL, `phone` varchar(20) DEFAULT NULL, `address1` varchar(45) DEFAULT NULL, `address2` varchar(45) DEFAULT NULL, `city` varchar(45) DEFAULT NULL, `state` varchar(30) DEFAULT NULL, `country` varchar(45) DEFAULT NULL, `bio` varchar(20000) DEFAULT NULL, `userimage` varchar(255) DEFAULT NULL, UNIQUE KEY `userid_UNIQUE` (`userid`), KEY `fk_userid_idx` (`userid`), CONSTRAINT `fk_userid` FOREIGN KEY (`userid`) REFERENCES `members` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		   27 Query	SET FOREIGN_KEY_CHECKS = 1
		   27 Quit
		   28 Connect	root@localhost on login54321
		   28 Query	SET FOREIGN_KEY_CHECKS = 0;
		   28 Query	CREATE TABLE IF NOT EXISTS cookies ( `cookieid` char(23) NOT NULL, `userid` char(23) NOT NULL, `tokenid` char(25) NOT NULL, `expired` tinyint(1) NOT NULL DEFAULT '0', `timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`userid`), CONSTRAINT `userid` FOREIGN KEY (`userid`) REFERENCES `members` (`id`) ON DELETE CASCADE ON UPDATE CASCADE ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		   28 Query	SET FOREIGN_KEY_CHECKS = 1
		   28 Quit
		   29 Connect	root@localhost on login54321
		   29 Query	SET FOREIGN_KEY_CHECKS = 0;
		   29 Query	CREATE TABLE IF NOT EXISTS tokens ( `tokenid` char(25) NOT NULL, `userid` char(23) NOT NULL, `expired` tinyint(1) NOT NULL DEFAULT '0', `timestamp` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`tokenid`), UNIQUE KEY `tokenid_UNIQUE` (`tokenid`), UNIQUE KEY `userid_UNIQUE` (`userid`), CONSTRAINT `userid_t` FOREIGN KEY (`userid`) REFERENCES `members` (`id`) ON DELETE CASCADE ON UPDATE CASCADE ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		   29 Query	SET FOREIGN_KEY_CHECKS = 1
		   29 Quit
		   30 Connect	root@localhost on login54321
		   30 Query	SET FOREIGN_KEY_CHECKS = 0;
		   30 Query	CREATE TABLE IF NOT EXISTS appConfig (`setting` char(26) NOT NULL, `value` varchar(12000) NOT NULL, `sortorder` int(5), `category` varchar(25) NOT NULL, `type` varchar(15) NOT NULL, `description` varchar(140), `required` tinyint(1) NOT NULL DEFAULT '0', PRIMARY KEY (`setting`), UNIQUE KEY `setting_UNIQUE` (`setting`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;
		   30 Query	SET FOREIGN_KEY_CHECKS = 1
		   30 Quit
170115  0:20:36	   31 Connect	root@localhost on login54321
		   31 Query	DROP TRIGGER IF EXISTS move_to_deletedMembers;
		   31 Query	DROP TRIGGER IF EXISTS add_admin;
		   31 Query	DROP TRIGGER IF EXISTS add_admin_beforeUpdate;
		   31 Query	DROP TRIGGER IF EXISTS stop_delete_required
		   31 Quit
		   32 Connect	root@localhost on login54321
		   32 Query	CREATE TRIGGER move_to_deletedMembers AFTER DELETE ON members FOR EACH ROW BEGIN DELETE FROM deletedMembers WHERE deletedMembers.id = OLD.id; UPDATE admins SET active = '0' where admins.userid = OLD.id;  INSERT INTO deletedMembers ( id, username, password, email, verified, admin) VALUES ( OLD.id, OLD.username, OLD.password, OLD.email, OLD.verified, OLD.admin ); END
		   32 Quit
		   33 Connect	root@localhost on login54321
		   33 Query	CREATE TRIGGER add_admin AFTER INSERT ON members FOR EACH ROW BEGIN IF (NEW.admin = 1) THEN  INSERT INTO admins (adminid, userid, active, superadmin ) VALUES (uuid_short(), NEW.id, 1, 0 ); END IF; END
		   33 Quit
		   34 Connect	root@localhost on login54321
		   34 Query	CREATE TRIGGER add_admin_beforeUpdate BEFORE UPDATE ON members FOR EACH ROW BEGIN set @s = (SELECT superadmin from admins where userid = NEW.id); set @a = (SELECT adminid from admins where userid = NEW.id); IF (NEW.admin = 1 && isnull(@a)) THEN INSERT INTO admins ( adminid, userid, active, superadmin ) VALUES ( uuid_short(), NEW.id, 1, 0 ); ELSEIF (NEW.admin = 0) THEN IF (@s = 0) THEN DELETE FROM admins WHERE userid = NEW.id and superadmin = 0; ELSEIF (@s = 1) THEN SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT='Cannot delete superadmin'; END IF; END IF; END
		   34 Quit
		   35 Connect	root@localhost on login54321
		   35 Query	SET GLOBAL event_scheduler = ON;
		   35 Query	CREATE EVENT IF NOT EXISTS cleanupOldDeleted ON SCHEDULE EVERY 1 DAY COMMENT 'Removes deleted records older than 30 days.' DO BEGIN DELETE FROM deletedMembers WHERE mod_timestamp < DATE_SUB(NOW(), INTERVAL 30 DAY); END
		   35 Quit
		   36 Query	DELETE FROM deletedMembers WHERE mod_timestamp < DATE_SUB(NOW(), INTERVAL 30 DAY)
170115  0:20:37	   37 Connect	root@localhost on login54321
		   37 Query	SET FOREIGN_KEY_CHECKS= 0;
		   37 Query	REPLACE INTO members (id, username, password, email, verified, admin) values('1183334142587b06a0bf20e', 'braddmagyar', '$2y$10$NGVQ.xEhkheAN4NA2GDiHeVFAj4kZETtUIMd9lUZP3pGKvBhJvDvi', 'braddmagyar@gmail.com', 1, 1);
		   37 Query	INSERT INTO admins (adminid, userid, active, superadmin ) VALUES (uuid_short(), NEW.id, 1, 0 )
		   37 Query	SET FOREIGN_KEY_CHECKS= 1
		   37 Quit
		   38 Connect	root@localhost on login54321
		   38 Query	SET FOREIGN_KEY_CHECKS = 0;
		   38 Query	UPDATE admins set superadmin = 1 where userid = '1183334142587b06a0bf20e';
		   38 Query	SET FOREIGN_KEY_CHECKS = 1
		   38 Quit
		   39 Connect	root@localhost on login54321
		   39 Query	REPLACE INTO appConfig (`sortorder`,`setting`,`category`,`value`,`type`,`description`,`required`) VALUES (27,'active_email','Messages','Your new account is now active! Click this link to log in!','text','Email message when account is verified',1), (26,'active_msg','Messages','Your account has been verified!','text','Display message when account is verified',1), (21,'admin_verify','Security','false','boolean','Require admin verification',1), (6,'avatar_dir','Website','/user/avatars','text','Directory where user avatars should be stored inside of base site directory. Do not include base_dir path.',1), (2,'base_dir','Website','/Applications/MAMP/htdocs/PHP-Login','hidden','Base directory of website in filesystem. "C:\..." in windows, "/..." in unix systems',1), (3,'base_url','Website','http://localhost/PHP-Login','url','Base URL of website. Example: "http://sitename.com"',1), (19,'cookie_expire_seconds','Security','2592000','number','Cookie expiration (in seconds)',1), (13,'from_email','Mailer','','email','From email address. Should typically be the same as "mail_user" email.',1), (14,'from_name','Mailer','Test Website','text','Name that shows up in "from" field of emails',1), (4,'htmlhead','Website','<!DOCTYPE html><html lang=\'en\'><head><meta charset=\'utf-8\'><meta name=\'viewport\' content-width=\'device-width\', initial-scale=\'1\', shrink-to-fit=\'no\'>','textarea','Main HTML header of website (without login-specific includes and script tags). Do not close <html> tag! Will break application functionality',1), (20,'jwt_secret','Security','php-login','text','Secret for JWT for tokens (Can be anything)',1), (18,'login_timeout','Security','300','number','Cooloff time for too many failed logins (in seconds)',1), (12,'mail_port','Mailer','587','number','Mail port. Common settings are 465 for ssl, 587 for tls, 25 for other',1), (10,'mail_pw','Mailer','','password','Email password to authenticate mailer',1), (11,'mail_security','Mailer','tls','text','Mail security type. Possible values are "ssl", "tls" or leave blank',1), (8,'mail_server','Mailer','smtp.email.com','text','Mail server address. Example: "smtp.email.com"',1), (7,'mail_server_type','Mailer','smtp','text','Type of email server. SMTP is most typical. Other server types untested.',1), (9,'mail_user','Mailer','','email','Email user',1), (5,'mainlogo','Website','','url','URL of main site logo. Example "http://sitename.com/logo.jpg"',1), (17,'max_attempts','Security','5','number','Maximum login attempts',1), (16,'password_min_length','Security','6','number','Minimum password length if "password_policy_enforce" is set to true',1), (15,'password_policy_enforce','Security','true','boolean','Require a mixture of upper and lowercase letters and minimum password length (set by "password_min_length")',1), (28,'reset_email','Messages','Click the link below to reset your password','text','Email message when user wants to reset their password',0), (23,'signup_requires_admin','Messages','Thank you for signing up! Before you can login, your account needs to be activated by an administrator.','text','Message displayed when user signs up, but requires admin approval',1), (22,'signup_thanks','Messages','Thank you for signing up! You will receive an email shortly confirming the verification of your account.','text','Message displayed wehn user signs up and can verify themselves via email',1), (1,'site_name','Website','localhost','text','Website name',1), (24,'verify_email_admin','Messages','Thank you for signing up! Your account will be reviewed by an admin shortly','text','Email message when account requires admin verification',1), (25,'verify_email_noadmin','Messages','Click this link to verify your new account!','text','Email message when user can verify themselves',1)
		   39 Quit
